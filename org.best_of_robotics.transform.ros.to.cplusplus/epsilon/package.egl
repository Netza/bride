[%
	
	var package : Package := Package.allInstances().at(0);
	var s : OrderedSet := package.node;

	//node
	for(node in package.node) {
		//var nodeHeaderTemplate := TemplateFactory.load('nodeHeader.egl');
		var sourceTemplate := TemplateFactory.load('nodeSource.egl');
		//var nodePropertiesTemplate := TemplateFactory.load('nodeProperties.egl');
		
		//nodeHeaderTemplate.populate('node', node);
		//nodeHeaderTemplate.generate('src/' + node.type + '.hpp');
		
		sourceTemplate.populate('node', node);
		sourceTemplate.generate('src/' + node.name + '.cpp');
		
		//nodePropertiesTemplate.populate('node', node);
		//nodePropertiesTemplate.generate('deployment/' + node.type + '.cpf');
	}
	
	//CMakeList
	var cmakeListsTemplate := TemplateFactory.load('cmakelists.egl');
	cmakeListsTemplate.populate('package', package);
	cmakeListsTemplate.generate('CMakeLists.txt');
	
	//Makefile
	var makefileTemplate := TemplateFactory.load('makefile.egl');
	makefileTemplate.generate('Makefile');
	//Manifest
	
	//manifest
	var manifestTemplate := TemplateFactory.load('manifest.egl');
	manifestTemplate.populate('package', package);
	manifestTemplate.generate('manifest.xml');
	
%]