// automatically generated by Xtext
grammar org.ros.model.ROS_Package with org.eclipse.xtext.common.Terminals

import "http://ros/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Package returns Package:
	'Package'
	name=EString
	'{'
		('author' author=EString)?
		('description' description=EString)?
		('license' license=EString)?
		('depend' '{' depend+=EString ( "," depend+=EString)* '}' )?
		('url' url=EString)?
		('rosdep' rosdep=EString)?
		(node+=Node ( "," node+=Node)* )*
	'}';


EString returns ecore::EString:
	STRING | ID;

Node returns Node:
	{Node}
	'Node'
	name=EString
	'{'
		('loopRate' loopRate=EDouble)?
		('args' args=EString)?
		('paramSource' paramSource=EString)?
		('namespace' namespace=EString)?
		('publisher' '{' publisher+=Publisher ( "," publisher+=Publisher)* '}' )?
		('subscriber' '{' subscriber+=Subscriber ( "," subscriber+=Subscriber)* '}' )?
		('serviceClient' '{' serviceClient+=ServiceClient ( "," serviceClient+=ServiceClient)* '}' )?
		('serviceServer' '{' serviceServer+=ServiceServer ( "," serviceServer+=ServiceServer)* '}' )?
		('parameter' '{' parameter+=Parameter ( "," parameter+=Parameter)* '}' )?
		('actionserver' '{' actionserver+=ActionServer ( "," actionserver+=ActionServer)* '}' )?
		('actionclient' '{' actionclient+=ActionClient ( "," actionclient+=ActionClient)* '}' )?
	'}';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

Publisher returns Publisher:
	{Publisher}
	(latch?='latch')?
	'Publisher'
	name=EString
	'{'
		('queueSize' queueSize=EInt)?
		('eventHandler' eventHandler=EString)?
		('msg' msg=EString)?
	'}';

Subscriber returns Subscriber:
	{Subscriber}
	(eventPort?='eventPort')?
	'Subscriber'
	name=EString
	'{'
		('queueSize' queueSize=EInt)?
		('eventHandler' eventHandler=EString)?
		('msg' msg=EString)?
	'}';

ServiceClient returns ServiceClient:
	{ServiceClient}
	'ServiceClient'
	name=EString
	'{'
		('msg' msg=EString)?
	'}';

ServiceServer returns ServiceServer:
	{ServiceServer}
	'ServiceServer'
	name=EString
	'{'
		('msg' msg=EString)?
	'}';

Parameter returns Parameter:
	{Parameter}
	'Parameter'
	name=EString
	'{'
		('value' value=EString)?
		('type' type=ParameterTypes)?
	'}';

ActionServer returns ActionServer:
	{ActionServer}
	'ActionServer'
	name=EString
	'{'
		('ActionType' ActionType=EString)?
	'}';

ActionClient returns ActionClient:
	{ActionClient}
	'ActionClient'
	name=EString
	'{'
		('ActionType' ActionType=EString)?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

ParameterTypes returns ParameterTypes:
	'ParameterTypes' /* TODO: implement this rule and an appropriate IValueConverter */;

